{"version":3,"sources":["ScrollViewGesture.tsx"],"names":["React","PanGestureHandler","Animated","cancelAnimation","runOnJS","useAnimatedGestureHandler","useAnimatedReaction","useDerivedValue","useSharedValue","withDecay","Easing","CTX","dealWithAnimation","IScrollViewGesture","props","vertical","pagingEnabled","snapEnabled","panGestureHandlerProps","loop","infinite","scrollAnimationDuration","withAnimation","enabled","dataLength","useContext","size","translation","testID","style","onScrollBegin","onScrollEnd","onTouchBegin","onTouchEnd","maxPage","isHorizontal","touching","scrollEndTranslation","scrollEndVelocity","_withSpring","useCallback","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","easeOutQuart","isFinished","endWithSpring","origin","value","velocity","nextPage","Math","round","deceleration","direction","computed","ceil","floor","page","finalPage","min","max","onFinish","activeDecay","resetBoundary","panGestureEventHandler","onStart","_","ctx","validStart","panOffset","onActive","e","translationX","translationY","panTranslation","boundary","fixed","dynamic","onEnd","velocityX","velocityY","children","ScrollViewGesture"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport type { StyleProp, ViewStyle } from \"react-native\";\nimport type { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\nimport {\n  PanGestureHandler,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"./constants\";\nimport { CTX } from \"./store\";\nimport type { WithTimingAnimation } from \"./types\";\nimport { dealWithAnimation } from \"./utils/dealWithAnimation\";\n\ninterface GestureContext extends Record<string, unknown> {\n  validStart: boolean\n  panOffset: number\n  max: number\n}\n\ninterface Props {\n  size: number\n  infinite?: boolean\n  testID?: string\n  style?: StyleProp<ViewStyle>\n  onScrollBegin?: () => void\n  onScrollEnd?: () => void\n  onTouchBegin?: () => void\n  onTouchEnd?: () => void\n  translation: Animated.SharedValue<number>\n}\n\nconst IScrollViewGesture: React.FC<Props> = (props) => {\n  const {\n    props: {\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      panGestureHandlerProps,\n      loop: infinite,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n    },\n  } = React.useContext(CTX);\n\n  const {\n    size,\n    translation,\n    testID,\n    style = {},\n    onScrollBegin,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const touching = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n\n  const _withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished)\n            onFinished && runOnJS(onFinished)();\n        },\n      );\n    },\n    [scrollAnimationDuration, withAnimation],\n  );\n\n  const endWithSpring = React.useCallback(\n    (onFinished?: () => void) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocity.value;\n      if (!pagingEnabled) {\n        /**\n                 * If enabled, releasing the touch will scroll to the nearest item.\n                 * valid when pagingEnabled=false\n                 */\n        if (snapEnabled) {\n          const nextPage\n                        = Math.round((origin + velocity * 0.4) / size) * size;\n\n          translation.value = _withSpring(nextPage, onFinished);\n          return;\n        }\n        translation.value = withDecay({\n          velocity,\n          deceleration: 0.999,\n        });\n        return;\n      }\n\n      const direction = -(scrollEndTranslation.value >= 0 ? 1 : -1);\n      const computed = direction < 0 ? Math.ceil : Math.floor;\n      const page = computed(-translation.value / size);\n      let finalPage = page + direction;\n\n      if (!infinite)\n        finalPage = Math.min(maxPage - 1, Math.max(0, finalPage));\n\n      translation.value = _withSpring(-finalPage * size, onFinished);\n    },\n    [\n      translation,\n      scrollEndVelocity.value,\n      pagingEnabled,\n      size,\n      scrollEndTranslation.value,\n      infinite,\n      _withSpring,\n      snapEnabled,\n      maxPage,\n    ],\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching],\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay(\n      { velocity: scrollEndVelocity.value },\n      isFinished => onFinish(isFinished as boolean),\n    );\n  }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value)\n      return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite) {\n        translation.value = _withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite)\n        translation.value = _withSpring(-((maxPage - 1) * size));\n    }\n  }, [\n    touching.value,\n    translation,\n    maxPage,\n    size,\n    scrollEndTranslation.value,\n    infinite,\n    activeDecay,\n    _withSpring,\n  ]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled)\n        resetBoundary();\n    },\n    [pagingEnabled, resetBoundary],\n  );\n\n  const panGestureEventHandler = useAnimatedGestureHandler<\n  PanGestureHandlerGestureEvent,\n  GestureContext\n  >(\n    {\n      onStart: (_, ctx) => {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && runOnJS(onScrollBegin)();\n        ctx.max = (maxPage - 1) * size;\n        ctx.panOffset = translation.value;\n      },\n      onActive: (e, ctx) => {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          cancelAnimation(translation);\n        }\n        touching.value = true;\n        const { translationX, translationY } = e;\n        const panTranslation = isHorizontal.value\n          ? translationX\n          : translationY;\n\n        if (\n          !infinite\n                    && (translation.value > 0 || translation.value < -ctx.max)\n        ) {\n          const boundary = translation.value > 0 ? 0 : -ctx.max;\n          const fixed = boundary - ctx.panOffset;\n          const dynamic = panTranslation - fixed;\n          translation.value = boundary + dynamic * 0.5;\n          return;\n        }\n\n        translation.value = ctx.panOffset + panTranslation;\n      },\n      onEnd: (e) => {\n        const { velocityX, velocityY, translationX, translationY } = e;\n        scrollEndVelocity.value = isHorizontal.value\n          ? velocityX\n          : velocityY;\n        scrollEndTranslation.value = isHorizontal.value\n          ? translationX\n          : translationY;\n\n        endWithSpring(onScrollEnd);\n\n        if (!infinite)\n          touching.value = false;\n      },\n    },\n    [\n      pagingEnabled,\n      isHorizontal.value,\n      infinite,\n      maxPage,\n      size,\n      snapEnabled,\n      onScrollBegin,\n      onScrollEnd,\n    ],\n  );\n\n  return (\n    <PanGestureHandler\n      {...panGestureHandlerProps}\n      enabled={enabled}\n      onGestureEvent={panGestureEventHandler}\n    >\n      <Animated.View\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n      >\n        {props.children}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"]}